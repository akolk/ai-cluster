---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: monitoring-grafana
  namespace: monitoring
  annotations:
    gethomepage.dev/href: "https://grafana.local"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/description: Cluster Data Analytics and Monitoring
    gethomepage.dev/icon: grafana.png
    gethomepage.dev/group: Monitoring
    gethomepage.dev/app: grafana
    gethomepage.dev/name: Grafana
    gethomepage.dev/widget.type: "grafana"
    gethomepage.dev/widget.url: "https://grafana.local"
    gethomepage.dev/widget.username: admin
    gethomepage.dev/widget.password: prom-operator
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`grafana.local`)
    kind: Rule
    services:
    - name: monitoring-grafana
      port: 80
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: longhorn
  namespace: longhorn
  annotations:
    gethomepage.dev/href: "https://longhorn.local"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/description: Distributed Cluster Storage
    gethomepage.dev/icon: longhorn.png
    gethomepage.dev/group: Storage
    gethomepage.dev/app: longhorn
    gethomepage.dev/name: Longhorn
    gethomepage.dev/namespace: longhorn
    gethomepage.dev/podSelector: ""
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`longhorn.local`)
    kind: Rule
    services:
    - name: longhorn-frontend
      port: 80
--- # add server.insecure: "true" to argocd-cmd-params-cm
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd
  namespace: argocd
spec:
  rules:
  - host: argo.local
    http:
      paths:
      - backend:
          service:
            name: argocd-server
            port:
              number: 80
        path: /
        pathType: Prefix
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: argocd
  namespace: argocd
  annotations:
    gethomepage.dev/href: "https://argo.local"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/description: Cluster GitOps and Continuous Delivery
    gethomepage.dev/group: GitOps
    gethomepage.dev/name: ArgoCD
    gethomepage.dev/app: argocd-server
    gethomepage.dev/widget.type: "argocd"
    gethomepage.dev/widget.url: "https://argo.local"
    gethomepage.dev/widget.key: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhcmdvY2QiLCJzdWIiOiJob21lcGFnZTphcGlLZXkiLCJuYmYiOjE3MzcwNjUwMjEsImlhdCI6MTczNzA2NTAyMSwianRpIjoiMjc0MTVjNGUtNjAwYi00MTRlLWIwMWUtOGE3NWY3MWM3MzliIn0.Zph6kdl7E9tPs_aX-0g3hXi-OxM6jd6G7XBPbjUyXWU"
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`argo.local`)
    kind: Rule
    services:
    - name: argocd-server
      port: 80
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: open-webui
  namespace: ollama
  annotations:
    gethomepage.dev/href: "https://open-webui.local"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/app: open-webui
    gethomepage.dev/description: AI Platform
    gethomepage.dev/group: AI
    gethomepage.dev/name: Open-WebUI
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`open-webui.local`)
    kind: Rule
    services:
    - name: open-webui
      port: 80
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus
  namespace: monitoring
  annotations:
    gethomepage.dev/href: "https://prometheus.local"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/app: prometheus
    gethomepage.dev/description: Metrics Scraping
    gethomepage.dev/icon: prometheus.png
    gethomepage.dev/group: Monitoring
    gethomepage.dev/name: Prometheus
    gethomepage.dev/widget.type: "prometheus"
    gethomepage.dev/widget.url: "https://prometheus.local"
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`prometheus.local`)
    kind: Rule
    services:
    - name: monitoring-kube-prometheus-prometheus
      port: 9090
