# self-signed issuer
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: selfsigned-issuer
spec:
  selfSigned: {}
---
# Root CA certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: k3s-ca
  namespace: traefik
spec:
  isCA: true
  commonName: "k3s Root CA"
  secretName: k3s-ca-secret
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: selfsigned-issuer
    kind: ClusterIssuer
---
# CA Issuer using our root CA
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: k3s-issuer
spec:
  ca:
    secretName: k3s-ca-secret
---
# Wildcard certificate
# kubectl get secret k3s-ca-secret -n traefik -o jsonpath='{.data.tls\.crt}' | base64 -d > k3s-ca.crt
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: k3s-wildcard
  namespace: traefik
spec:
  secretName: k3s-tls
  commonName: "*.k3s"
  dnsNames:
    - "*.k3s"
    - "k3s"
    - "argo.k3s"
    - "prometheus.k3s"
    - "grafana.k3s"
    - "longhorn.k3s"
    - "open-webui.k3s"
    - "flyte.k3s"
    - "homepage.k3s"
  issuerRef:
    name: k3s-issuer
    kind: ClusterIssuer
  usages:
    - server auth
    - client auth
---
# TLS Store for Traefik
apiVersion: traefik.io/v1alpha1
kind: TLSStore
metadata:
  name: default
  namespace: traefik
spec:
  defaultCertificate:
    secretName: k3s-tls
